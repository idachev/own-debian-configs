###########################################################        
# Options for Zsh

eval `dircolors -b`

autoload -U compinit promptinit colors
compinit
promptinit
colors

unsetopt beep

setopt appendhistory extendedglob
setopt autopushd pushdminus pushdsilent pushdtohome
setopt autocd
# setopt cdablevars #Cause cd ... to freez
setopt ignoreeof
setopt interactivecomments
setopt nobanghist
setopt noclobber
setopt SH_WORD_SPLIT
setopt nohup

#disable xon/xoff to use ctrl-s for reverse history
stty -ixon

export LC_CTYPE=en_US.UTF-8
export LC_ALL=en_US.UTF-8

##################################################################
# History options

HISTFILE=~/.histfile
HISTSIZE=9999999
SAVEHIST=9999999

# Remove superfluous blanks from each command line being
# added to the history list. 
setopt HIST_REDUCE_BLANKS

# When searching for history entries in the line editor, 
# do not display duplicates of a line previously found, 
# even if the duplicates are not contiguous.
setopt HIST_FIND_NO_DUPS

# If a new command line being added to the history list 
# duplicates an older one, the older command is removed 
# from the list (even if it is not the previous event).
setopt HIST_IGNORE_ALL_DUPS

# Do not enter command lines into the history list if 
# they are duplicates of the previous event. 
setopt HIST_IGNORE_DUPS

# Remove command lines from the history list when the 
# first character on the line is a space, or when one 
# of the expanded aliases contains a leading space. 
# Note that the command lingers in the internal history 
# until the next command is entered before it vanishes,
# allowing you to briefly reuse or edit the line.
# If you want to make it vanish right away without
# entering another command, type a space and press return. 
setopt HIST_IGNORE_SPACE

# This options works like APPEND_HISTORY except that new
# history lines are added to the $HISTFILE incrementally
# (as soon as they are entered), rather than waiting until
# the shell is killed. The file is periodically trimmed
# to the number of lines specified by $SAVEHIST,
# but can exceed this value between trimmings. 
setopt INC_APPEND_HISTORY

##################################################################
# PS1 and PS2

. ~/.zshprompt

# Disable username lookp = don't look up NIS users
zmodload -i zsh/parameter
_comp_setup+=$'\ntypeset -a userdirs'

##################################################################
# Stuff to make my life easier
zstyle :compinstall filename '/home/idachev/.zshrc'

# allow approximate
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*:match:*' original only
zstyle ':completion:*:approximate:*' max-errors 1 numeric

# tab completion for PID :D
zstyle ':completion:*:*:kill:*' menu yes select
zstyle ':completion:*:kill:*' force-list always

# cd not select parent dir
zstyle ':completion:*:cd:*' ignore-parents parent pwd

##################################################################
# Key bindings
# http://mundy.yazzy.org/unix/zsh.php
# http://www.zsh.org/mla/users/2000/msg00727.html

typeset -g -A key
bindkey '^?' backward-delete-char
bindkey '^[[1~' beginning-of-line
bindkey '^[[5~' up-line-or-history
bindkey '^[[3~' delete-char
bindkey '^[[4~' end-of-line
bindkey '^[[6~' down-line-or-history
bindkey '^[[A' up-line-or-search
bindkey '^[[D' backward-char
bindkey '^[[B' down-line-or-search
bindkey '^[[C' forward-char 
bindkey '^[[1;5C' emacs-forward-word
bindkey '^[[1;5D' emacs-backward-word
bindkey '^R' history-incremental-search-backward
bindkey '^S' history-incremental-search-forward

##################################################################
# Aliases

# Used for alias auto extension
export EDITOR="vim"

#export BROWSER="elinks"
#export BROWSER="konqueror"
export BROWSER="google-chrome"

export XTERM="aterm +sb -geometry 80x29 -fg black -bg lightgoldenrodyellow -fn -xos4-terminus-medium-*-normal-*-14-*-*-*-*-*-iso8859-15"

#export VIDEO_PLAYER="totem"
export VIDEO_PLAYER="smplayer"

export IMAGE_VIEW="gthumb"

export OFFICE_VIEW="soffice"

export PDF_VIEW="okular"

export ARCHIVE_VIEW="ark"

export LOG_VIEW="glogg"

export FONT_VIEW="gnome-font-viewer"

# Set up auto extension stuff
alias -s html=$BROWSER
alias -s org=$BROWSER
alias -s php=$BROWSER
alias -s com=$BROWSER
alias -s net=$BROWSER
alias -s PNG=$IMAGE_VIEW
alias -s png=$IMAGE_VIEW
alias -s JPG=$IMAGE_VIEW
alias -s jpg=$IMAGE_VIEW
alias -s jpeg=$IMAGE_VIEW
alias -s GIF=$IMAGE_VIEW
alias -s gif=$IMAGE_VIEW
alias -s sxw=$OFFICE_VIEW
alias -s doc=$OFFICE_VIEW
alias -s docx=$OFFICE_VIEW
alias -s ods=$OFFICE_VIEW
alias -s xls=$OFFICE_VIEW
alias -s xlsx=$OFFICE_VIEW
alias -s tgz=$ARCHIVE_VIEW
alias -s gz=$ARCHIVE_VIEW
alias -s bz2=$ARCHIVE_VIEW
alias -s zip=$ARCHIVE_VIEW
alias -s java=$EDITOR
alias -s txt=$EDITOR
alias -s PKGBUILD=$EDITOR
alias -s pdf=$PDF_VIEW
alias -s mov=$VIDEO_PLAYER
alias -s mk4=$VIDEO_PLAYER
alias -s mp4=$VIDEO_PLAYER
alias -s mkv=$VIDEO_PLAYER
alias -s m4v=$VIDEO_PLAYER
alias -s mpg=$VIDEO_PLAYER
alias -s mvi=$VIDEO_PLAYER
alias -s avi=$VIDEO_PLAYER
alias -s 3gp=$VIDEO_PLAYER
alias -s 3GP=$VIDEO_PLAYER
alias -s log=$LOG_VIEW
alias -s ttf=$FONT_VIEW

# command L equivalent to command |less
alias -g L='|less' 

# command S equivalent to command &> /dev/null &
alias -g S='&> /dev/null &'

##################################################################
# Plugins

source ~/.zsh/zsh-syntax-highlighting.zsh

source ~/.zsh/zsh-history-substring-search.zsh

source ~/.zsh/zsh-z.plugin.zsh

zstyle ':completion:*' menu select

export ZSH_CUSTOM="/home/idachev/.oh-my-zsh/custom"
source "${ZSH_CUSTOM}/plugins/zsh_codex/zsh_codex.plugin.zsh"
bindkey '^G' create_completion

##################################################################
# Misc

fpath=(~/.zsh/zsh-completions $fpath)

# type a directory's name to cd to it
compctl -/ cd

if [ -f ~/.aliases ]; then
  . ~/.aliases
fi

if [ -f ~/.shell_set_colors ]; then
  . ~/.shell_set_colors
fi

if [ -f ~/.ls_dir_set_colors ]; then
  . ~/.ls_dir_set_colors
fi

if [ -f ~/.localrc ]; then
  . ~/.localrc
fi

##################################################################
# Keychain

keychain -q ~/.local_ssh_key

if [ -f ~/.keychain/${HOST}-sh ]; then
  . ~/.keychain/${HOST}-sh
fi

if [ -f ~/.keychain/${HOST}-sh-gpg ]; then
  . ~/.keychain/${HOST}-sh-gpg
fi

##################################################################
# Others

# jump zsh completion
#source `jump-bin --zsh-integration`

# kubectl

if which kubectl > /dev/null 2>&1; then
  source <(kubectl completion zsh)
fi

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="${HOME}/.sdkman"
[[ -s "${HOME}/.sdkman/bin/sdkman-init.sh" ]] && source "${HOME}/.sdkman/bin/sdkman-init.sh"


if [ -f ~/bin/aws-vault ]; then
  eval "$(aws-vault --completion-script-zsh)"
fi


if [ -f ~/.zsh/zsh-completions/maestral ]; then
  . ~/.zsh/zsh-completions/maestral
fi

if [ -f ~/bin/settings/linux/home/_manual_/xmodmap_g915_wheel ]; then
  xmodmap ~/bin/settings/linux/home/_manual_/xmodmap_g915_wheel
fi

source <(temporal completion zsh)


export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

eval "$(gh copilot alias -- zsh)"
